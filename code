"""
import os

from langchain_mongodb import MongoDBAtlasVectorSearch

from pymongo import MongoClient

from dotenv import load_dotenv

from langchain_mongodb.retrievers.hybrid_search import MongoDBAtlasHybridSearchRetriever

from langchain_openai import AzureOpenAIEmbeddings



# Load environment variables

load_dotenv()



# Azure OpenAI configuration

openai_api_type = "azure"

azure_endpoint = "https://jnj-ls-rg.openai.azure.com/" # Use 'azure_endpoint' instead

openai_api_version = "2023-09-15-preview"

openai_api_key = "abc7a61ffc8748e885768d47d6221efe" # Replace with your actual key

deployment_name = "chatembed"



# Set environment variables

os.environ["OPENAI_API_TYPE"] = openai_api_type

os.environ["OPENAI_API_VERSION"] = openai_api_version

os.environ["AZURE_OPENAI_ENDPOINT"] = azure_endpoint # Updated environment variable

os.environ["OPENAI_API_KEY"] = openai_api_key



# MongoDB connection

MONGO_URI = os.getenv("MAIN_DB_URL")

client = MongoClient(MONGO_URI)

db = client.get_database()
data = client.list_database_names()
print("dbdbdbbd", data)
collection = db["internal_products"] # Replace with your collection name

sample_doc = collection.find_one({}, {"embedding": 1}) 
print("=============>",sample_doc)
smaple = collection.list_indexes()
print("======>",list(smaple))

# Initialize Azure OpenAI Embeddings with 'azure_endpoint' instead of 'openai_api_base'

embeddings = AzureOpenAIEmbeddings(

  azure_deployment=deployment_name,

  openai_api_version=openai_api_version,

  openai_api_key=openai_api_key,

  azure_endpoint=azure_endpoint, # Use 'azure_endpoint'

)



# Initialize MongoDB Vector Search

vector_search = MongoDBAtlasVectorSearch(

  collection=collection,

  embedding=embeddings,

  index_name="vector_index",

  relevance_score_fn="cosine",

)
print("7777777", vector_search)
indexes = collection.index_information()
print("33333333333", indexes)



# Initialize the retriever

retriever = MongoDBAtlasHybridSearchRetriever(

  vectorstore=vector_search,

  search_index_name="vector_index",

  top_k=5,

  fulltext_penalty=60.0,

  vector_penalty=60.0,

)



# Define your query

query = "give me assessment name whose name is Exp_testing"




# Print results

documents = retriever.invoke(query)

for doc in documents:

  print(doc)



print("MongoDBAtlasVectorSearch initialized!")
"""
above is my code and i am getting console as 
"""
dbdbdbbd ['sip', 'admin', 'local']
=============> {'_id': ObjectId('66f3dc4a769a0d499e946a79')}
======> [SON([('v', 2), ('key', SON([('_id', 1)])), ('name', '_id_')])]
7777777 <langchain_mongodb.vectorstores.MongoDBAtlasVectorSearch object at 0x0000021D82448EC0>
33333333333 {'_id_': {'v': 2, 'key': [('_id', 1)]}}
Traceback (most recent call last):
  File "C:\Users\PJadha04\Documents\MongoVector\vector_search.py", line 124, in <module>
    documents = retriever.invoke(query)
                ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\langchain_core\retrievers.py", line 259, in invoke
    result = self._get_relevant_documents(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\langchain_mongodb\retrievers\hybrid_search.py", line 117, in _get_relevant_documents
    cursor = self.collection.aggregate(pipeline)  # type: ignore[arg-type]
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\collection.py", line 2978, in aggregate
    return self._aggregate(
           ^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\collection.py", line 2886, in _aggregate
    return self._database.client._retryable_read(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1861, in _retryable_read
    return self._retry_internal(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1828, in _retry_internal
    ).run()
      ^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2565, in run
    return self._read() if self._is_read else self._write()
           ^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2708, in _read
    return self._func(self._session, self._server, conn, read_pref)  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\aggregation.py", line 164, in get_cursor
    result = conn.command(
             ^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\helpers.py", line 47, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\pool.py", line 536, in command
    return command(
           ^^^^^^^^
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\synchronous\network.py", line 213, in command
    helpers_shared._check_command_response(
  File "C:\Users\PJadha04\Documents\MongoVector\env\Lib\site-packages\pymongo\helpers_shared.py", line 247, in _check_command_response
    raise OperationFailure(errmsg, code, response, max_wire_version)
pymongo.errors.OperationFailure: PlanExecutor error during aggregation :: caused by :: Expected com.xgen.mongot.index.InitializedSearchIndex, but got instance of com.xgen.mongot.index.lucene.InitializedLuceneVectorIndex, full error: {'ok': 0.0, 'errmsg': 'PlanExecutor error during aggregation :: caused by :: Expected com.xgen.mongot.index.InitializedSearchIndex, but got instance of com.xgen.mongot.index.lucene.InitializedLuceneVectorIndex', 'code': 8, 'codeName': 'UnknownError', '$clusterTime': {'clusterTime': Timestamp(1739015435, 48), 'signature': {'hash': b'\xca|\x9a\xf1\x04\x04\xa4Vb\xbc\xb0\x01/\xbb\x07\xd0\xf6\x8b\x11\xf9', 'keyId': 7421453868283723778}}, 'operationTime': Timestamp(1739015435, 48)}
"""
how to solve this error
i already created index named as vector_index and its type as vectorSearch and Index Fields as "embedding" and its status is also ready
