NAME
SIZE
pipeline.log
-
helm-events.txt
29.9 KB
helm-resources.txt
680 bytes
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/deployment.yaml
1.4 KB
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/hpa.yaml
569 bytes
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/ingress.yaml
752 bytes
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/service.yaml
607 bytes
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/tests/test-connection.yaml
605 bytes
jobManifest.json
90.1 KB
rise-visualization-mf-0.2.0-alpha.39.e2eDevelop.tgz
3 KB

this above files are present in artifacts of pipeline and pipeline is failed at deploy stage 

refer following artifacts files which generate after completion of pipeline for another branch . which all stages are passed successfully
NAME
SIZE
pipeline.log
-
docker._scm_container-visualization-ms-Dockerfile.stdOut.txt
270 bytes
helm-events.txt
19 KB
helm-resources.txt
1.5 KB
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/deployment.yaml
1.4 KB
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/hpa.yaml
569 bytes
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/ingress.yaml
764 bytes
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/service.yaml
600 bytes
helm.manifests/rise-visualization-mf/rise-visualization-mf/templates/tests/test-connection.yaml
598 bytes
jobManifest.json
130.1 KB
rise-visualization-mf-0.2.0-alpha.93.e2e.tgz
3 KB
snyk-image-scan-javz-docker_visualization-mf_0.2.0-alpha.93.e2e-1740743762097-licenseTexts.txt
237 bytes
snyk-image-scan-javz-docker_visualization-mf_0.2.0-alpha.93.e2e-1740743762097.json
1.2 KB

Why docker related files are not generated and following is my 
Dockerfile
FROM jnj.artifactrepo.jnj.com/nginxinc/nginx-unprivileged:1.24-alpine


# Remove the default Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf


# Inline Nginx configuration that listens on 0.0.0.0:3000
RUN echo 'server { \
    listen 0.0.0.0:3000; \
    server_name localhost; \
    location / { \
        root /usr/share/nginx/html; \
        index index.html; \
        try_files $uri $uri/ /index.html; \
    } \
}' > /etc/nginx/conf.d/default.conf


# Copy the contents of the build folder to the Nginx web server directory
COPY build/ /usr/share/nginx/html/


# Expose port 3000
EXPOSE 3000


# Start Nginx and your React application on port 3000
CMD ["nginx", "-g", "daemon off;"]
