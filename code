import os

from langchain_mongodb import MongoDBAtlasVectorSearch

from pymongo import MongoClient

from dotenv import load_dotenv

from langchain_mongodb.retrievers.hybrid_search import MongoDBAtlasHybridSearchRetriever

from langchain_openai import AzureOpenAIEmbeddings



# Load environment variables

load_dotenv()



# Azure OpenAI configuration

openai_api_type = "azure"

azure_endpoint = "https://jnj-ls-rg.openai.azure.com/" # Use 'azure_endpoint' instead

openai_api_version = "2023-09-15-preview"

openai_api_key = "abc7a61ffc8748e885768d47d6221efe" # Replace with your actual key

deployment_name = "chatembed"



# Set environment variables

os.environ["OPENAI_API_TYPE"] = openai_api_type

os.environ["OPENAI_API_VERSION"] = openai_api_version

os.environ["AZURE_OPENAI_ENDPOINT"] = azure_endpoint # Updated environment variable

os.environ["OPENAI_API_KEY"] = openai_api_key



# MongoDB connection

MONGO_URI = os.getenv("MAIN_DB_URL")

client = MongoClient(MONGO_URI)

db = client.get_database()
data = client.list_database_names()
print("dbdbdbbd", data)
collection = db["internal_products"] # Replace with your collection name

sample_doc = collection.find_one({}, {"embedding": 1}) 
print("=============>",sample_doc)
smaple = collection.list_indexes()
print("======>",list(smaple))

# Initialize Azure OpenAI Embeddings with 'azure_endpoint' instead of 'openai_api_base'

embeddings = AzureOpenAIEmbeddings(

  azure_deployment=deployment_name,

  openai_api_version=openai_api_version,

  openai_api_key=openai_api_key,

  azure_endpoint=azure_endpoint, # Use 'azure_endpoint'

)



# Initialize MongoDB Vector Search

vector_search = MongoDBAtlasVectorSearch(

  collection=collection,

  embedding=embeddings,

  index_name="default",

  relevance_score_fn="cosine",

)
print("7777777", vector_search)
indexes = collection.index_information()
print("33333333333", indexes)



# Initialize the retriever

retriever = MongoDBAtlasHybridSearchRetriever(

  vectorstore=vector_search,

  search_index_name="default",

  top_k=5,

  fulltext_penalty=60.0,

  vector_penalty=60.0,

)



# Define your query

query = "give me assessment name whose name is Exp_testing"



# Print results

documents = retriever.invoke(query)

for doc in documents:

  print("+++++++++++++++++++",doc)



print("MongoDBAtlasVectorSearch initialized!")

i have created the atlas search index named as default 
when i ran the code again it not gives me error but gave following output 
dbdbdbbd ['sip', 'admin', 'local']
=============> {'_id': ObjectId('66f3dc4a769a0d499e946a79')}
======> [SON([('v', 2), ('key', SON([('_id', 1)])), ('name', '_id_')])]
7777777 <langchain_mongodb.vectorstores.MongoDBAtlasVectorSearch object at 0x0000025141BCA930>       
33333333333 {'_id_': {'v': 2, 'key': [('_id', 1)]}}
MongoDBAtlasVectorSearch initialized!
then why my   print("+++++++++++++++++++",doc) not print and why it not answered my query question ? "give me assessment name whose name is Exp_testing"?
